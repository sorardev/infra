version: '3.8'

networks:
  ck-io:

services:
  sonar:
    image: sonarqube:9.4-community
    container_name: sonar
    restart: always
    depends_on:
      - sonar-postgres
    ports:
      - '9000:9000'
      - '9092:9092'
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar-postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - './volumes/sonar/conf:/opt/sonarqube/conf'
      - './volumes/sonar/data:/opt/sonarqube/data'
      - './volumes/sonar/logs:/opt/sonarqube/logs'
      - './volumes/sonar/extensions:/opt/sonarqube/extensions'
    networks:
      - ck-io

  sonar-postgres:
    image: postgres:9.6.21-alpine
    container_name: 'sonar-postgres'
    volumes:
      - './volumes/sonar/postgresql:/var/lib/postgresql'
      - './volumes/sonar/postgresql_data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - ck-io

  traefik:
    build:
      context: .
      dockerfile: ./traefik.Dockerfile
    image: ckechad_production_traefik
    depends_on:
      - sonar
    volumes:
      - './volumes/traefik/:/etc/traefik/acme:z'
      - './traefik/traefik.yml:/etc/traefik/traefik.yml'
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
    networks:
      - ck-io
